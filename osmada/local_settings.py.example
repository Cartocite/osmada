# TAGS_IMPORTANCE
#
# Allows to set which tags are the most important to you in order to select a
# "main tag" of an action during analysis.
# First matching tag from TAGS_IMPORTANCE from the list will be elected as main
# tag. Note that you can use a multi-criteria filter (see example).
#
TAGS_IMPORTANCE = ['highway=*,cycleway=track', 'shop=*']

# TRUSTED_USERS
#
# A list of users you blindly trust: their edits do not require review.

# Note that the software itself do not use that variable but it's only used in
# WORKFLOWS setting from this very file.
#
TRUSTED_USERS = ['margaret doe', 'thelma doe', 'steve doe', 'jack doe']



# A list of keys that are not worth looking at them

# Note that the software itself do not use that variable but it's only used in
# WORKFLOWS setting from this very file (IgnoreKeys filter)
#
IGNORED_KEYS = ['note', 'description']

# WORKFLOWS
#
# The core setting :workflow definitions, as a list
#
# Each list item represents one workflow definition.
#
# A workflow definition is a dict with two keys
#
# - 'flow', which is a list of steps, each step being a dict with
#    3 keys :
#     - type: the importer class (as dotted path str)
#     - class: theexecutable class (as dotted path str). It can either
#       relate to a Filter, an Importer or an Exporter, see below for full list.
#     - params : a list of parameters
#       passed to the Exporter/Importer/Filter
# - 'name', which is the name of your workflow
#
# The order of the list in `flow` matters : it gives the execution order.
#
# Available classes for `class` key of step item
#
# Type `import`:
# - AdiffImporter
#
# Type `export`:
# - AdiffExporter
# - CSVExporter
# - AnalyzedCSVExporter ; it includes more fields requiring some analysis :
#   - main_tag: (see TAGS_IMPORTANCE)
#   - added_tags: tags added by action
#   - removed_tags: tags removed by action
#   - modified_tags: tags which value was changed by action
#
# Type `filter`:
# - IgnoreUsers
# - IgnoreElementsCreation
# - IgnoreElementsModification
# - IgnoreKeys
# - IgnoreSmallNodeMoves

WORKFLOWS = [
    {
        'name': 'test_simple_csv',
        'flow': [
            {'type': 'import', 'class': 'osmdata.importers.AdiffImporter'},

            {'type': 'filter', 'class': 'osmdata.filters.IgnoreUsers', 'params': [TRUSTED_USERS]} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsCreation', 'params': ['amenity=wastebasket']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsModification', 'params': ['highway=crossing']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsCreation', 'params': ['wikidata=*']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsModification', 'params': ['note=*']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreKeys', 'params': [IGNORED_KEYS]} ,


            {'type': 'export', 'class': 'osmdata.exporters.CSVExporter'}
        ],
    },
    {
        'name': 'test_advanced_csv',
        'flow': [
            {'type': 'import', 'class': 'osmdata.importers.AdiffImporter'},

            {'type': 'filter', 'class': 'osmdata.filters.IgnoreUsers', 'params': [TRUSTED_USERS]} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsCreation', 'params': ['amenity=wastebasket']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsModification', 'params': ['highway=crossing']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsCreation', 'params': ['wikidata=*']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsModification', 'params': ['note=*']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreKeys', 'params': [IGNORED_KEYS]} ,
            {'type': 'export', 'class': 'osmdata.exporters.AnalyzedCSVExporter'}
        ],
    },
    {
        'name': 'test_advanced_adiff',
        'flow': [
            {'type': 'import', 'class': 'osmdata.importers.AdiffImporter'},

            {'type': 'filter', 'class': 'osmdata.filters.IgnoreUsers', 'params': [TRUSTED_USERS]} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsCreation', 'params': ['amenity=wastebasket']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsModification', 'params': ['highway=crossing']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsCreation', 'params': ['wikidata=*']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreElementsModification', 'params': ['note=*']} ,
            {'type': 'filter', 'class': 'osmdata.filters.IgnoreKeys', 'params': [IGNORED_KEYS]} ,
            {'type': 'export', 'class': 'osmdata.exporters.AdiffExporter'}
        ],
    },
    'name': 'test_multiple_outputs',
        'flow': [
            {'type': 'import', 'class': 'osmdata.importers.AdiffImporter'},

            {'type': 'filter', 'class': 'osmdata.filters.IgnoreUsers', 'params': [TRUSTED_USERS]} ,
            {'type': 'export', 'class': 'osmdata.exporters.AdiffExporter'}
            {'type': 'export', 'class': 'osmdata.exporters.AnalyzedCSVExporter'}
        ],
    },
    {
        'name': 'test_passthrough_adiff',
        'flow': [
            {'type': 'import', 'class': 'osmdata.importers.AdiffImporter'},
            {'type': 'export', 'class': 'osmdata.exporters.AdiffExporter'}
        ],
    },
]
